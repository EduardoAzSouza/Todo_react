{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Eduardo\\\\Documents\\\\JS\\\\react\\\\12_todo_react\\\\src\\\\components\\\\TaskForm.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\n\n// CSS\nimport styles from \"./TaskForm.module.css\";\n\n// interfaces\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskForm = _ref => {\n  _s();\n  let {\n    btnText\n  } = _ref;\n  const [id, setId] = useState(0);\n  const [title, setTitle] = useState(\"\");\n  const [difficulty, setDifficulty] = useState(0);\n  const addTaskHandler = () => {};\n  const handleChange = () => {};\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: addTaskHandler,\n    className: styles.form,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.input_container,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"title\",\n        children: \"Titulo:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"title\",\n        placeholder: \"Titulo da tarefa\",\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.input_container,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"difficulty\",\n        children: \"Dificuldade::\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"dificulty\",\n        placeholder: \"Dificuldade da tarefa\",\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"submit\",\n      value: btnText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 3\n  }, this);\n};\n_s(TaskForm, \"mu/CV2OyHJHlUj1OA7gTjhSzCc0=\");\n_c = TaskForm;\nexport default TaskForm;\nvar _c;\n$RefreshReg$(_c, \"TaskForm\");","map":{"version":3,"names":["React","useState","styles","jsxDEV","_jsxDEV","TaskForm","_ref","_s","btnText","id","setId","title","setTitle","difficulty","setDifficulty","addTaskHandler","handleChange","onSubmit","className","form","children","input_container","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","name","placeholder","onChange","value","_c","$RefreshReg$"],"sources":["C:/Users/Eduardo/Documents/JS/react/12_todo_react/src/components/TaskForm.tsx"],"sourcesContent":["import React, {useState, ChangeEvent, FormEvent, useEffect } from 'react'\r\n\r\n// CSS\r\nimport styles from \"./TaskForm.module.css\";\r\n\r\n// interfaces\r\nimport { ITask } from \"../interfaces/Task\";\r\n\r\ntype Props = {\r\n    btnText: string\r\n}\r\n\r\nconst TaskForm = ({btnText}: Props) => {\r\n  const [id, setId] = useState<number>(0);\r\n  const [title, setTitle] = useState<string>(\"\");\r\n  const [difficulty, setDifficulty] = useState<number>(0);\r\n\r\n  const addTaskHandler = () => {}\r\n\r\n  const handleChange = () => {\r\n    \r\n  }\r\n\r\n\r\n\r\n\r\n\r\n  return ( \r\n  <form onSubmit={addTaskHandler} className={styles.form}>\r\n    <div className={styles.input_container}>\r\n        <label htmlFor='title'>Titulo:</label>\r\n        <input type='text' \r\n        name='title' \r\n        placeholder='Titulo da tarefa' \r\n        onChange={handleChange}/>\r\n    </div>\r\n    <div className={styles.input_container}>\r\n        <label htmlFor='difficulty'>Dificuldade::</label>\r\n        <input type='text' \r\n        name='dificulty' \r\n        placeholder='Dificuldade da tarefa' \r\n        onChange={handleChange}/>\r\n    </div>\r\n    <input type='submit' value={btnText}/>\r\n  </form>\r\n  )\r\n}\r\n\r\nexport default TaskForm"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,QAA2C,OAAO;;AAEzE;AACA,OAAOC,MAAM,MAAM,uBAAuB;;AAE1C;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAOA,MAAMC,QAAQ,GAAGC,IAAA,IAAsB;EAAAC,EAAA;EAAA,IAArB;IAACC;EAAc,CAAC,GAAAF,IAAA;EAChC,MAAM,CAACG,EAAE,EAAEC,KAAK,CAAC,GAAGT,QAAQ,CAAS,CAAC,CAAC;EACvC,MAAM,CAACU,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAS,EAAE,CAAC;EAC9C,MAAM,CAACY,UAAU,EAAEC,aAAa,CAAC,GAAGb,QAAQ,CAAS,CAAC,CAAC;EAEvD,MAAMc,cAAc,GAAGA,CAAA,KAAM,CAAC,CAAC;EAE/B,MAAMC,YAAY,GAAGA,CAAA,KAAM,CAE3B,CAAC;EAMD,oBACAZ,OAAA;IAAMa,QAAQ,EAAEF,cAAe;IAACG,SAAS,EAAEhB,MAAM,CAACiB,IAAK;IAAAC,QAAA,gBACrDhB,OAAA;MAAKc,SAAS,EAAEhB,MAAM,CAACmB,eAAgB;MAAAD,QAAA,gBACnChB,OAAA;QAAOkB,OAAO,EAAC,OAAO;QAAAF,QAAA,EAAC;MAAO;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACtCtB,OAAA;QAAOuB,IAAI,EAAC,MAAM;QAClBC,IAAI,EAAC,OAAO;QACZC,WAAW,EAAC,kBAAkB;QAC9BC,QAAQ,EAAEd;MAAa;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxB,CAAC,eACNtB,OAAA;MAAKc,SAAS,EAAEhB,MAAM,CAACmB,eAAgB;MAAAD,QAAA,gBACnChB,OAAA;QAAOkB,OAAO,EAAC,YAAY;QAAAF,QAAA,EAAC;MAAa;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACjDtB,OAAA;QAAOuB,IAAI,EAAC,MAAM;QAClBC,IAAI,EAAC,WAAW;QAChBC,WAAW,EAAC,uBAAuB;QACnCC,QAAQ,EAAEd;MAAa;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxB,CAAC,eACNtB,OAAA;MAAOuB,IAAI,EAAC,QAAQ;MAACI,KAAK,EAAEvB;IAAQ;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAClC,CAAC;AAET,CAAC;AAAAnB,EAAA,CAlCKF,QAAQ;AAAA2B,EAAA,GAAR3B,QAAQ;AAoCd,eAAeA,QAAQ;AAAA,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}