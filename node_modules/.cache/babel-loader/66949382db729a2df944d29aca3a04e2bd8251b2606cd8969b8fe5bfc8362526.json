{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Eduardo\\\\Documents\\\\JS\\\\react\\\\12_todo_react\\\\src\\\\components\\\\TaskForm.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\n\n// CSS\nimport styles from \"./TaskForm.module.css\";\n\n// interfaces\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskForm = _ref => {\n  _s();\n  let {\n    btnText,\n    taskList,\n    setTaskList\n  } = _ref;\n  const [id, setId] = useState(0);\n  const [title, setTitle] = useState(\"\");\n  const [difficulty, setDifficulty] = useState(0);\n  const addTaskHandler = e => {\n    e.preventDefault();\n    const id = Math.floor(Math.random() * 1000);\n    const newTask = {\n      id,\n      title,\n      difficulty\n    };\n    setTaskList([...taskList, newTask]);\n    setTitle(\"\");\n    setDifficulty(0);\n    console.log(taskList);\n  };\n  const handleChange = e => {\n    if (e.target.name === \"title\") {\n      setTitle(e.target.value);\n    } else {\n      setDifficulty(parseInt(e.target.value));\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: addTaskHandler,\n    className: styles.form,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.input_container,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"title\",\n        children: \"T\\xEDtulo:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"title\",\n        placeholder: \"T\\xEDtulo da tarefa\",\n        value: title,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.input_container,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"difficulty\",\n        children: \"Dificuldade:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        name: \"difficulty\",\n        placeholder: \"Dificuldade da tarefa (1 a 5)\",\n        value: difficulty,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"submit\",\n      value: btnText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n_s(TaskForm, \"mu/CV2OyHJHlUj1OA7gTjhSzCc0=\");\n_c = TaskForm;\nexport default TaskForm;\nvar _c;\n$RefreshReg$(_c, \"TaskForm\");","map":{"version":3,"names":["React","useState","styles","jsxDEV","_jsxDEV","TaskForm","_ref","_s","btnText","taskList","setTaskList","id","setId","title","setTitle","difficulty","setDifficulty","addTaskHandler","e","preventDefault","Math","floor","random","newTask","console","log","handleChange","target","name","value","parseInt","onSubmit","className","form","children","input_container","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","_c","$RefreshReg$"],"sources":["C:/Users/Eduardo/Documents/JS/react/12_todo_react/src/components/TaskForm.tsx"],"sourcesContent":["import React, {useState, ChangeEvent, FormEvent, useEffect } from 'react'\r\n\r\n// CSS\r\nimport styles from \"./TaskForm.module.css\";\r\n\r\n// interfaces\r\nimport { ITask } from \"../interfaces/Task\";\r\n\r\ntype Props = {\r\n  btnText: string;\r\n  taskList: ITask[];\r\n  setTaskList?: React.Dispatch<React.SetStateAction<ITask[]>>;\r\n  task?: ITask | null;\r\n  handleUpdate?(id: number, title: string, difficulty: number): void;\r\n}\r\n\r\nconst TaskForm = ({btnText, taskList, setTaskList}: Props) => {\r\n  const [id, setId] = useState<number>(0);\r\n  const [title, setTitle] = useState<string>(\"\");\r\n  const [difficulty, setDifficulty] = useState<number>(0);\r\n\r\n  const addTaskHandler = (e: FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n\r\n    const id = Math.floor(Math.random() * 1000)\r\n\r\n    const newTask: ITask = {id, title, difficulty}\r\n\r\n    setTaskList!([...taskList, newTask]);\r\n\r\n    setTitle(\"\");\r\n    setDifficulty(0);\r\n\r\n    console.log(taskList);\r\n\r\n\r\n  };\r\n\r\n  const handleChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n    if (e.target.name === \"title\") {\r\n      setTitle(e.target.value);\r\n    } else {\r\n      setDifficulty(parseInt(e.target.value));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={addTaskHandler} className={styles.form}>\r\n      <div className={styles.input_container}>\r\n        <label htmlFor=\"title\">Título:</label>\r\n        <input\r\n          type=\"text\"\r\n          name=\"title\"\r\n          placeholder=\"Título da tarefa\"\r\n          value={title}\r\n          onChange={handleChange}\r\n        />\r\n      </div>\r\n      <div className={styles.input_container}>\r\n        <label htmlFor=\"difficulty\">Dificuldade:</label>\r\n        <input\r\n          type=\"number\"\r\n          name=\"difficulty\"\r\n          placeholder=\"Dificuldade da tarefa (1 a 5)\"\r\n          value={difficulty}\r\n          onChange={handleChange}\r\n        />\r\n      </div>\r\n      <input type=\"submit\" value={btnText} />\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default TaskForm;"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,QAA2C,OAAO;;AAEzE;AACA,OAAOC,MAAM,MAAM,uBAAuB;;AAE1C;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAWA,MAAMC,QAAQ,GAAGC,IAAA,IAA6C;EAAAC,EAAA;EAAA,IAA5C;IAACC,OAAO;IAAEC,QAAQ;IAAEC;EAAkB,CAAC,GAAAJ,IAAA;EACvD,MAAM,CAACK,EAAE,EAAEC,KAAK,CAAC,GAAGX,QAAQ,CAAS,CAAC,CAAC;EACvC,MAAM,CAACY,KAAK,EAAEC,QAAQ,CAAC,GAAGb,QAAQ,CAAS,EAAE,CAAC;EAC9C,MAAM,CAACc,UAAU,EAAEC,aAAa,CAAC,GAAGf,QAAQ,CAAS,CAAC,CAAC;EAEvD,MAAMgB,cAAc,GAAIC,CAA6B,IAAK;IACxDA,CAAC,CAACC,cAAc,CAAC,CAAC;IAElB,MAAMR,EAAE,GAAGS,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAG,IAAI,CAAC;IAE3C,MAAMC,OAAc,GAAG;MAACZ,EAAE;MAAEE,KAAK;MAAEE;IAAU,CAAC;IAE9CL,WAAW,CAAE,CAAC,GAAGD,QAAQ,EAAEc,OAAO,CAAC,CAAC;IAEpCT,QAAQ,CAAC,EAAE,CAAC;IACZE,aAAa,CAAC,CAAC,CAAC;IAEhBQ,OAAO,CAACC,GAAG,CAAChB,QAAQ,CAAC;EAGvB,CAAC;EAED,MAAMiB,YAAY,GAAIR,CAAgC,IAAK;IACzD,IAAIA,CAAC,CAACS,MAAM,CAACC,IAAI,KAAK,OAAO,EAAE;MAC7Bd,QAAQ,CAACI,CAAC,CAACS,MAAM,CAACE,KAAK,CAAC;IAC1B,CAAC,MAAM;MACLb,aAAa,CAACc,QAAQ,CAACZ,CAAC,CAACS,MAAM,CAACE,KAAK,CAAC,CAAC;IACzC;EACF,CAAC;EAED,oBACEzB,OAAA;IAAM2B,QAAQ,EAAEd,cAAe;IAACe,SAAS,EAAE9B,MAAM,CAAC+B,IAAK;IAAAC,QAAA,gBACrD9B,OAAA;MAAK4B,SAAS,EAAE9B,MAAM,CAACiC,eAAgB;MAAAD,QAAA,gBACrC9B,OAAA;QAAOgC,OAAO,EAAC,OAAO;QAAAF,QAAA,EAAC;MAAO;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACtCpC,OAAA;QACEqC,IAAI,EAAC,MAAM;QACXb,IAAI,EAAC,OAAO;QACZc,WAAW,EAAC,qBAAkB;QAC9Bb,KAAK,EAAEhB,KAAM;QACb8B,QAAQ,EAAEjB;MAAa;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACxB,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eACNpC,OAAA;MAAK4B,SAAS,EAAE9B,MAAM,CAACiC,eAAgB;MAAAD,QAAA,gBACrC9B,OAAA;QAAOgC,OAAO,EAAC,YAAY;QAAAF,QAAA,EAAC;MAAY;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eAChDpC,OAAA;QACEqC,IAAI,EAAC,QAAQ;QACbb,IAAI,EAAC,YAAY;QACjBc,WAAW,EAAC,+BAA+B;QAC3Cb,KAAK,EAAEd,UAAW;QAClB4B,QAAQ,EAAEjB;MAAa;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACxB,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eACNpC,OAAA;MAAOqC,IAAI,EAAC,QAAQ;MAACZ,KAAK,EAAErB;IAAQ;MAAA6B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACnC,CAAC;AAEX,CAAC;AAACjC,EAAA,CAvDIF,QAAQ;AAAAuC,EAAA,GAARvC,QAAQ;AAyDd,eAAeA,QAAQ;AAAC,IAAAuC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}